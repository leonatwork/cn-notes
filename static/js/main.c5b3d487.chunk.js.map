{"version":3,"sources":["components/header.jsx","components/index.jsx","components/notes.jsx","data/notes-object.js","components/content.jsx","components/main.jsx","index.js"],"names":["Header","state","navExpanded","navbarStyle","backgroundColor","navbarTextStyle","color","fontSize","fontFamily","this","props","showNav","Navbar","collapseOnSelect","style","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","notes","map","note","activeNoteID","Link","key","onClick","handleClick","cursor","textAlign","title","Component","Index","Notes","Fragment","content","Content","width","margin","paddingTop","borderRight","Main","showResponsiveNav","setState","currentShowNav","window","innerWidth","addEventListener","resize","bind","removeEventListener","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5b3d487.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nclass Header extends Component {\n  state = { navExpanded: false };\n  render() {\n    const navbarStyle = {\n      backgroundColor: \"rgb(251, 187, 187)\",\n    };\n    const navbarTextStyle = {\n      color: \"white\",\n      fontSize: \"28px\",\n      fontFamily: \"'Merienda One', cursive\",\n    };\n    if (this.props.showNav) {\n      return (\n        <Navbar collapseOnSelect style={navbarStyle} expand=\"lg\">\n          <Navbar.Brand\n            style={navbarTextStyle}\n            href=\"https://leonatwork.github.io/cn-notes/\"\n          >\n            CN Notes\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              {this.props.notes.map((note) => {\n                let className = \"list-group-item\";\n                if (note.id === this.props.activeNoteID)\n                  className += \" active-me\";\n                return (\n                  <Nav.Link\n                    key={note.id}\n                    href={\"#\" + note.id}\n                    className={className}\n                    onClick={() => this.props.handleClick(note.id)}\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                  >\n                    {note.title}\n                  </Nav.Link>\n                );\n              })}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      );\n    }\n    return (\n      <Navbar expand=\"lg\" style={navbarStyle}>\n        <Navbar.Brand\n          href=\"https://leonatwork.github.io/cn-notes/\"\n          style={navbarTextStyle}\n        >\n          CN Notes\n        </Navbar.Brand>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\nconst Index = ({ notes, activeNoteID, handleClick }) => {\n  return (\n    <ul className=\"list-group list-group-flush\">\n      {notes.map((note) => {\n        let className = \"list-group-item\";\n        if (note.id === activeNoteID) className += \" active\";\n        return (\n          <li\n            key={note.id}\n            className={className}\n            onClick={() => handleClick(note.id)}\n            style={{ cursor: \"pointer\" }}\n          >\n            {note.title}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\n\nconst Notes = ({ note }) => {\n  return <React.Fragment>{note}</React.Fragment>;\n};\n\nexport default Notes;\n","import React from \"react\";\n\nexport const notes = [\n  {\n    id: 0,\n    title: \"Introduction\",\n    content: (\n      <div>\n        <h1>Introduction</h1>\n        <hr />\n        <h4>Hardware, Firmware & Software</h4>\n        <ul>\n          <li>\n            <b>Hardware</b>\n            <ul>\n              <li>Tangible/physical components</li>\n              <li>Hardware cannot operate without firmware</li>\n              <li>Hardware can be changed</li>\n              <li>\n                <b>Eg.</b> Peripherals devices, CPU, memory, mouse\n              </li>\n            </ul>\n          </li>\n          <li>\n            <b>Firmware</b>\n            <ul>\n              <li>\n                A software which runs more closely/intimately on the hardware\n                than a general software.\n              </li>\n              <li>It is put or burnt at the time of hardware manufacturing</li>\n              <li>\n                It cannot be removed/changed once loaded and only can be updated\n              </li>\n              <li>It is written in machine language</li>\n              <li>It is the heart of the device</li>\n              <li>\n                Present on all hardware like microwave, remote and SIM card.\n                Helps in performing some basic activities like booting\n              </li>\n              <li>They are very small compared to software</li>\n              <li>\n                <b>Eg.</b> PC BIOS (startup firmware of the motherboard), timing\n                and control mechanism\n              </li>\n            </ul>\n          </li>\n          <li>\n            <b>Software</b>\n            <ul>\n              <li>\n                Set of instructions or programs that tells a computer how to\n                perform a particular task\n              </li>\n              <li>Software can be changed </li>\n              <li>\n                Software is stored in user accessible memory whereas firmware is\n                stored in hardware (not accessible by user)\n              </li>\n              <li>\n                Types :\n                <ol>\n                  <li>System software</li>\n                  <li>Application software</li>\n                </ol>\n              </li>\n              <li>\n                <b>Eg.</b> MS office, Chrome, OS\n              </li>\n            </ul>\n          </li>\n        </ul>\n\n        <hr />\n        <h4>Transmission modes in computer systems</h4>\n        <ul>\n          <li>\n            <b>Simplex</b>\n            <ul>\n              <li>Communication is unidirectional</li>\n              <li>Only one device can transmit, the other can only receive</li>\n              <li>\n                <b>Eg.</b> Client server communication, TV, FM receiver,\n                Keyboard\n              </li>\n            </ul>\n          </li>\n          <li>\n            <b>Half duplex</b>\n            <ul>\n              <li>Each device can send and receive but not simultaneously</li>\n              <li>\n                When one is sending data the other can only receive and\n                vice-versa\n              </li>\n              <li>Cable link is only one</li>\n              <li>\n                <b>Eg.</b> Walkie Talkie\n              </li>\n            </ul>\n          </li>\n          <li>\n            <b>Full duplex</b>\n            <ul>\n              <li>Both stations can send and receive simultaneously</li>\n              <li>\n                Capacity of the link is shared among two (If total 2mbps then\n                divided as 1 and 1mbs between A and B)\n              </li>\n              <li>\n                <b>Eg.</b> Mobile phone\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n    ),\n  },\n  {\n    id: 1,\n    title: \"OSI & TCP/IP Model\",\n    content: (\n      <div>\n        <h1>OSI & TCP/IP Model</h1>\n        <hr />\n      </div>\n    ),\n  },\n];\n","import React from \"react\";\nimport Index from \"./index\";\nimport Notes from \"./notes\";\nimport { notes } from \"../data/notes-object\";\n\nconst Content = ({ activeNoteID, showNav, handleClick }) => {\n  return (\n    <div\n      className=\"row\"\n      style={{ width: \"80%\", margin: \"0 auto\", paddingTop: \"15px\" }}\n    >\n      {!showNav && (\n        <div className=\"col-3\" style={{ borderRight: \"1px solid #eee\" }}>\n          <Index\n            notes={notes}\n            activeNoteID={activeNoteID}\n            handleClick={handleClick}\n          />\n        </div>\n      )}\n      <div className=\"col\">\n        <Notes note={notes[activeNoteID].content} />\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","import React, { Component } from \"react\";\nimport Header from \"./header\";\nimport Content from \"./content\";\nimport { notes } from \"../data/notes-object\";\n\nclass Main extends Component {\n  state = { showResponsiveNav: false, activeNoteID: 0 };\n  resize() {\n    let currentShowNav = window.innerWidth < 950;\n    if (currentShowNav !== this.state.showNav) {\n      this.setState({ showResponsiveNav: currentShowNav });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  handleClick = (id) => {\n    this.setState({ activeNoteID: id });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header\n          showNav={this.state.showResponsiveNav}\n          notes={notes}\n          activeNoteID={this.state.activeNoteID}\n          handleClick={this.handleClick}\n        />\n        <Content\n          showNav={this.state.showResponsiveNav}\n          activeNoteID={this.state.activeNoteID}\n          handleClick={this.handleClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Main from \"./components/main\";\nimport \"./style.css\";\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}